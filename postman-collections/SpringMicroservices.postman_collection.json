{
	"info": {
		"_postman_id": "e357f0ba-8954-4158-96a6-7ea346e51087",
		"name": "SpringMicroservices",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth Service",
			"item": [
				{
					"name": "OauthCert",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "96c43a75-80d3-49fe-aaee-34b744a07f69",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.access_token).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.token_type).to.eql('bearer');",
									"});",
									"",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.refresh_token).to.be.a('string');",
									"});",
									"",
									"pm.test(\"Your test name\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.scope).to.eql('openid');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "acmesecret",
									"type": "string"
								},
								{
									"key": "username",
									"value": "acme",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{server.protocol}}://{{server.host}}:9999/sso/oauth/token?password={{password}}&username={{user}}&grant_type=password&scope=openid&client_secret=acmesecret&client_id=acme",
							"protocol": "{{server.protocol}}",
							"host": [
								"{{server.host}}"
							],
							"port": "9999",
							"path": [
								"sso",
								"oauth",
								"token"
							],
							"query": [
								{
									"key": "password",
									"value": "{{password}}"
								},
								{
									"key": "username",
									"value": "{{user}}"
								},
								{
									"key": "grant_type",
									"value": "password"
								},
								{
									"key": "scope",
									"value": "openid"
								},
								{
									"key": "client_secret",
									"value": "acmesecret"
								},
								{
									"key": "client_id",
									"value": "acme"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Bookmark Service",
			"item": [
				{
					"name": "PostBookmark",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "68fa59c9-399e-49ae-85a6-2cbdd66b5380",
								"exec": [
									"postman.setNextRequest('GetBookmark')",
									"",
									"if (pm.response.code==200){",
									"    var jsonData = pm.response.json();",
									"    postman.setEnvironmentVariable('bookmarkId',jsonData.id);",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"description is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.description).is.a('string');",
									"});",
									"",
									"pm.test(\"href is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.href).is.a('string');",
									"});",
									"",
									"pm.test(\"label is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.label).is.a('string');",
									"});",
									"",
									"pm.test(\"id is a Number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).is.a('Number');",
									"});",
									"",
									"pm.test(\"userId is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.userId).is.a('string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"href\": \"http://some-other-host-for-dexter.com\",\r\n    \"description\": \"A description for dexter's link\",\r\n    \"label\": \"dexterLabel\"\r\n}"
						},
						"url": {
							"raw": "{{server.protocol}}://{{server.host}}:9025/bookmark-service/v1/users/{{userId}}/bookmarks",
							"protocol": "{{server.protocol}}",
							"host": [
								"{{server.host}}"
							],
							"port": "9025",
							"path": [
								"bookmark-service",
								"v1",
								"users",
								"{{userId}}",
								"bookmarks"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetBookmark",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec6b10c5-df73-4254-9ca1-75646692504d",
								"exec": [
									"postman.setNextRequest('PutBookmark')",
									"",
									"if (pm.response.code==200){",
									"    var jsonData = pm.response.json();",
									"    postman.setEnvironmentVariable('bookmarkId',jsonData.id);",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"href is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.href).is.a('string');",
									"});",
									"",
									"pm.test(\"description is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.description).is.a('string');",
									"});",
									"",
									"pm.test(\"label is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.label).is.a('string');",
									"});",
									"",
									"pm.test(\"id is a Number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).is.a('Number');",
									"});",
									"",
									"pm.test(\"userId is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.userId).is.a('string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server.protocol}}://{{server.host}}:9025/bookmark-service/v1/users/{{userId}}/bookmarks/{{bookmarkId}}",
							"protocol": "{{server.protocol}}",
							"host": [
								"{{server.host}}"
							],
							"port": "9025",
							"path": [
								"bookmark-service",
								"v1",
								"users",
								"{{userId}}",
								"bookmarks",
								"{{bookmarkId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutBookmark",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fbd0f070-a23a-4960-b9c5-f4824daa7614",
								"exec": [
									"postman.setNextRequest('GetBookmarks')",
									"",
									"if (pm.response.code==200){",
									"    var jsonData = pm.response.json();",
									"    postman.setEnvironmentVariable('bookmarkId',jsonData.id);",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"href is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.href).is.a('string');",
									"});",
									"",
									"pm.test(\"description is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.description).is.a('string');",
									"});",
									"",
									"pm.test(\"label is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.label).is.a('string');",
									"});",
									"",
									"pm.test(\"id is a Number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).is.a('Number');",
									"});",
									"",
									"pm.test(\"userId is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.userId).is.a('string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"href\": \"http://some-other-host-for-dexter2.com\",\r\n    \"description\": \"A description for dexter's link2\",\r\n    \"label\": \"dexterLabel2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server.protocol}}://{{server.host}}:9025/bookmark-service/v1/users/{{userId}}/bookmarks/{{bookmarkId}}",
							"protocol": "{{server.protocol}}",
							"host": [
								"{{server.host}}"
							],
							"port": "9025",
							"path": [
								"bookmark-service",
								"v1",
								"users",
								"{{userId}}",
								"bookmarks",
								"{{bookmarkId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetBookmarks",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f643beab-bd31-4be2-b94e-ec66f26eea12",
								"exec": [
									"postman.setNextRequest('DelBookmark')",
									"",
									"if (pm.response.code==200){",
									"    var jsonData = pm.response.json();",
									"    postman.setEnvironmentVariable('bookmarkId',jsonData[0].id);",
									"}",
									"    ",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"href is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].href).is.a('string');",
									"});",
									"",
									"pm.test(\"description is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].description).is.a('string');",
									"});",
									"",
									"pm.test(\"label is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].label).is.a('string');",
									"});",
									"",
									"pm.test(\"id is a Number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].id).is.a('Number');",
									"});",
									"",
									"pm.test(\"userId is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].userId).is.a('string');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server.protocol}}://{{server.host}}:9025/bookmark-service/v1/users/dexter/bookmarks",
							"protocol": "{{server.protocol}}",
							"host": [
								"{{server.host}}"
							],
							"port": "9025",
							"path": [
								"bookmark-service",
								"v1",
								"users",
								"dexter",
								"bookmarks"
							]
						}
					},
					"response": []
				},
				{
					"name": "DelBookmark",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3bbc0cf9-0220-4834-9456-cd3c58414ae9",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"href\": \"http://some-other-host-for-dexter.com\",\r\n    \"description\": \"A description for dexter's link\",\r\n    \"label\": \"dexterLabel\",\r\n}"
						},
						"url": {
							"raw": "{{server.protocol}}://{{server.host}}:9025/bookmark-service/v1/users/{{userId}}/bookmarks/{{bookmarkId}}",
							"protocol": "{{server.protocol}}",
							"host": [
								"{{server.host}}"
							],
							"port": "9025",
							"path": [
								"bookmark-service",
								"v1",
								"users",
								"{{userId}}",
								"bookmarks",
								"{{bookmarkId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "78fc1eee-9bf6-44b6-a029-dbd0f3b78719",
						"type": "text/javascript",
						"exec": [
							"pm.environment.set(\"userId\",\"dexter\");",
							"",
							"pm.sendRequest({",
							"    url: \"https://localhost:9999/sso/oauth/token?password=spring&username=jlong&grant_type=password&scope=openid&client_secret=acmesecret&client_id=acme\",",
							"    method: \"POST\",",
							"    header: {",
							"        'Authorization': \"Basic YWNtZTphY21lc2VjcmV0\"",
							"    },",
							"    request: {",
							"        \"href\": \"http://some-other-host-for-dexter.com\",",
							"        \"description\": \"A description for dexter's link\",",
							"        \"label\": \"dexterLabel\"",
							"    }",
							"}, function (err, res){",
							"    pm.environment.set('access_token',res.json().access_token)",
							"});",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b652d62a-4882-45e2-9081-554012ff135f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Contact Service",
			"item": [
				{
					"name": "PostContact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "627450de-2134-490d-a6a4-51b9359a6b3d",
								"exec": [
									"postman.setNextRequest('GetContact')",
									"",
									"if (pm.response.code==200){",
									"    var jsonData = pm.response.json();",
									"    postman.setEnvironmentVariable('bookmarkId',jsonData.id);",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"firstName is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstName).is.a('string');",
									"});",
									"",
									"pm.test(\"lastName is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lastName).is.a('string');",
									"});",
									"",
									"pm.test(\"email matches '.+@.+\\..+'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.email).to.match(/^.+@.+\\..+$/);",
									"});",
									"",
									"pm.test(\"relationship is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.relationship).is.a('string');",
									"});",
									"",
									"pm.test(\"id is a Number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).is.a('Number');",
									"});",
									"",
									"pm.test(\"userId is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.userId).is.a('string');",
									"});",
									"",
									"pm.test(\"phoneNumbers.id is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.phoneNumbers[0].id).is.a('Number');",
									"    pm.expect(jsonData.phoneNumbers[1].id).is.a('Number');",
									"});",
									"",
									"pm.test(\"phoneNumbers.number is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.phoneNumbers[0].number).is.a('string');",
									"    pm.expect(jsonData.phoneNumbers[1].number).is.a('string');",
									"});",
									"",
									"pm.test(\"phoneNumbers.description is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.phoneNumbers[0].description).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.id is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].id).is.a('Number');",
									"    pm.expect(jsonData.addresses[1].id).is.a('Number');",
									"});",
									"",
									"pm.test(\"addresses.country is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].country).is.a('string');",
									"    pm.expect(jsonData.addresses[1].country).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.town is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].town).is.a('string');",
									"    pm.expect(jsonData.addresses[1].town).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.street is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].street).is.a('string');",
									"    pm.expect(jsonData.addresses[1].street).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.number is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].number).is.a('Number');",
									"    pm.expect(jsonData.addresses[1].number).is.a('Number');",
									"});",
									"",
									"pm.test(\"addresses.entrance is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].entrance).is.a('Number');",
									"});",
									"",
									"pm.test(\"addresses.flatNumber is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].flatNumber).is.a('Number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Stéphane\",\n    \"lastName\": \"Maldini\",\n    \"email\": \"stéphane@email.com\",\n    \"relationship\": \"coleague\",\n\t\"phoneNumbers\": [\n\t\t{\n\t\t  \"number\": \"+40723123456\",\n\t\t  \"description\": \"phone number description Stéphane Maldini\"\n\t\t},\n\t\t{\n\t\t  \"number\": \"+40723123457\",\n\t\t  \"description\": null\n\t\t}\n\t],\n\t\"addresses\": [\n\t\t{\n\t\t\t\"id\": 32,\n\t\t\t\"country\": \"Stéphane country\",\n\t\t\t\"town\": \"Stéphane address\",\n\t\t\t\"street\": \"Stéphane street\",\n\t\t\t\"number\": 84,\n\t\t\t\"entrance\": 3,\n\t\t\t\"flatNumber\": 123\n\t\t},\n\t\t{\n\t\t\t\"id\": 33,\n\t\t\t\"country\": \"Stéphane country2\",\n\t\t\t\"town\": \"Stéphane address2\",\n\t\t\t\"street\": \"Stéphane street2\",\n\t\t\t\"number\": 94,\n\t\t\t\"entrance\": null,\n\t\t\t\"flatNumber\": null\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{server.protocol}}://{{server.host}}:9025/contact-service/v1/users/{{userId}}/contacts",
							"protocol": "{{server.protocol}}",
							"host": [
								"{{server.host}}"
							],
							"port": "9025",
							"path": [
								"contact-service",
								"v1",
								"users",
								"{{userId}}",
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetContact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "187fa631-ae12-4ee9-9b06-3537a762f9df",
								"exec": [
									"postman.setNextRequest('PutContact')",
									"",
									"if (pm.response.code==200){",
									"    var jsonData = pm.response.json();",
									"    postman.setEnvironmentVariable('bookmarkId',jsonData.id);",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"firstName is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstName).is.a('string');",
									"});",
									"",
									"pm.test(\"lastName is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lastName).is.a('string');",
									"});",
									"",
									"pm.test(\"email matches '.+@.+\\..+'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.email).to.match(/^.+@.+\\..+$/);",
									"});",
									"",
									"pm.test(\"relationship is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.relationship).is.a('string');",
									"});",
									"",
									"pm.test(\"id is a Number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).is.a('Number');",
									"});",
									"",
									"pm.test(\"userId is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.userId).is.a('string');",
									"});",
									"",
									"pm.test(\"phoneNumbers.id is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.phoneNumbers[0].id).is.a('Number');",
									"    pm.expect(jsonData.phoneNumbers[1].id).is.a('Number');",
									"});",
									"",
									"pm.test(\"phoneNumbers.number is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.phoneNumbers[0].number).is.a('string');",
									"    pm.expect(jsonData.phoneNumbers[1].number).is.a('string');",
									"});",
									"",
									"pm.test(\"phoneNumbers.description is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.phoneNumbers[0].description).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.id is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].id).is.a('Number');",
									"    pm.expect(jsonData.addresses[1].id).is.a('Number');",
									"});",
									"",
									"pm.test(\"addresses.country is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].country).is.a('string');",
									"    pm.expect(jsonData.addresses[1].country).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.town is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].town).is.a('string');",
									"    pm.expect(jsonData.addresses[1].town).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.street is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].street).is.a('string');",
									"    pm.expect(jsonData.addresses[1].street).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.number is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].number).is.a('Number');",
									"    pm.expect(jsonData.addresses[1].number).is.a('Number');",
									"});",
									"",
									"pm.test(\"addresses.entrance is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].entrance).is.a('Number');",
									"});",
									"",
									"pm.test(\"addresses.flatNumber is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].flatNumber).is.a('Number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server.protocol}}://{{server.host}}:9025/contact-service/v1/users/{{userId}}/contacts/{{bookmarkId}}",
							"protocol": "{{server.protocol}}",
							"host": [
								"{{server.host}}"
							],
							"port": "9025",
							"path": [
								"contact-service",
								"v1",
								"users",
								"{{userId}}",
								"contacts",
								"{{bookmarkId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PutContact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "64e56265-e3a4-4798-a438-508c492c6fe8",
								"exec": [
									"postman.setNextRequest('GetContacts')",
									"",
									"if (pm.response.code==200){",
									"    var jsonData = pm.response.json();",
									"    postman.setEnvironmentVariable('bookmarkId',jsonData.id);",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"firstName is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.firstName).is.a('string');",
									"});",
									"",
									"pm.test(\"lastName is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.lastName).is.a('string');",
									"});",
									"",
									"pm.test(\"email matches '.+@.+\\..+'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.email).to.match(/^.+@.+\\..+$/);",
									"});",
									"",
									"pm.test(\"relationship is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.relationship).is.a('string');",
									"});",
									"",
									"pm.test(\"id is a Number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).is.a('Number');",
									"});",
									"",
									"pm.test(\"userId is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.userId).is.a('string');",
									"});",
									"",
									"pm.test(\"phoneNumbers.id is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.phoneNumbers[0].id).is.a('Number');",
									"    pm.expect(jsonData.phoneNumbers[1].id).is.a('Number');",
									"});",
									"",
									"pm.test(\"phoneNumbers.number is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.phoneNumbers[0].number).is.a('string');",
									"    pm.expect(jsonData.phoneNumbers[1].number).is.a('string');",
									"});",
									"",
									"pm.test(\"phoneNumbers.description is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.phoneNumbers[0].description).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.id is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].id).is.a('Number');",
									"    pm.expect(jsonData.addresses[1].id).is.a('Number');",
									"});",
									"",
									"pm.test(\"addresses.country is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].country).is.a('string');",
									"    pm.expect(jsonData.addresses[1].country).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.town is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].town).is.a('string');",
									"    pm.expect(jsonData.addresses[1].town).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.street is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].street).is.a('string');",
									"    pm.expect(jsonData.addresses[1].street).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.number is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].number).is.a('Number');",
									"    pm.expect(jsonData.addresses[1].number).is.a('Number');",
									"});",
									"",
									"pm.test(\"addresses.entrance is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].entrance).is.a('Number');",
									"});",
									"",
									"pm.test(\"addresses.flatNumber is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.addresses[0].flatNumber).is.a('Number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Stéphane2\",\r\n    \"lastName\": \"Maldini2\",\r\n    \"email\": \"stephane@email.com\",\r\n    \"relationship\": \"friend\",\r\n\t\"phoneNumbers\": [\r\n\t\t{\r\n\t\t  \"number\": \"+40723123456\",\r\n\t\t  \"description\": \"phone number description 2 Stéphane Maldini\"\r\n\t\t},\r\n\t\t{\r\n\t\t  \"number\": \"+40723123457\",\r\n\t\t  \"description\": null\r\n\t\t}\r\n\t],\r\n\t\"addresses\": [\r\n\t\t{\r\n\t\t\t\"id\": 32,\r\n\t\t\t\"country\": \"Stéphane country\",\r\n\t\t\t\"town\": \"Stéphane address\",\r\n\t\t\t\"street\": \"Stéphane street\",\r\n\t\t\t\"number\": 84,\r\n\t\t\t\"entrance\": 2,\r\n\t\t\t\"flatNumber\": 45\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"id\": 33,\r\n\t\t\t\"country\": \"Stéphane country2\",\r\n\t\t\t\"town\": \"Stéphane address2\",\r\n\t\t\t\"street\": \"Stéphane street2\",\r\n\t\t\t\"number\": 94,\r\n\t\t\t\"entrance\": null,\r\n\t\t\t\"flatNumber\": null\r\n\t\t}\r\n\t]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server.protocol}}://{{server.host}}:9025/contact-service/v1/users/{{userId}}/contacts/{{bookmarkId}}",
							"protocol": "{{server.protocol}}",
							"host": [
								"{{server.host}}"
							],
							"port": "9025",
							"path": [
								"contact-service",
								"v1",
								"users",
								"{{userId}}",
								"contacts",
								"{{bookmarkId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetContacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4ac86152-d9a9-4a47-a0d3-090a4f3a7cfe",
								"exec": [
									"postman.setNextRequest('DelContact')",
									"",
									"if (pm.response.code==200){",
									"    var jsonData = pm.response.json();",
									"    postman.setEnvironmentVariable('bookmarkId',jsonData[0].id);",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"firstName is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].firstName).is.a('string');",
									"});",
									"",
									"pm.test(\"lastName is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].lastName).is.a('string');",
									"});",
									"",
									"pm.test(\"email matches '.+@.+\\..+'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].email).to.match(/^.+@.+\\..+$/);",
									"});",
									"",
									"pm.test(\"relationship is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].relationship).is.a('string');",
									"});",
									"",
									"pm.test(\"id is a Number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].id).is.a('Number');",
									"});",
									"",
									"pm.test(\"userId is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].userId).is.a('string');",
									"});",
									"",
									"pm.test(\"phoneNumbers.id is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].phoneNumbers[0].id).is.a('Number');",
									"    pm.expect(jsonData[0].phoneNumbers[1].id).is.a('Number');",
									"});",
									"",
									"pm.test(\"phoneNumbers.number is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].phoneNumbers[0].number).is.a('string');",
									"    pm.expect(jsonData[0].phoneNumbers[1].number).is.a('string');",
									"});",
									"",
									"pm.test(\"phoneNumbers.description is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].phoneNumbers[0].description).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.id is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].addresses[0].id).is.a('Number');",
									"    pm.expect(jsonData[0].addresses[1].id).is.a('Number');",
									"});",
									"",
									"pm.test(\"addresses.country is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].addresses[0].country).is.a('string');",
									"    pm.expect(jsonData[0].addresses[1].country).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.town is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].addresses[0].town).is.a('string');",
									"    pm.expect(jsonData[0].addresses[1].town).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.street is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].addresses[0].street).is.a('string');",
									"    pm.expect(jsonData[0].addresses[1].street).is.a('string');",
									"});",
									"",
									"pm.test(\"addresses.number is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].addresses[0].number).is.a('Number');",
									"    pm.expect(jsonData[0].addresses[1].number).is.a('Number');",
									"});",
									"",
									"pm.test(\"addresses.entrance is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].addresses[0].entrance).is.a('Number');",
									"});",
									"",
									"pm.test(\"addresses.flatNumber is a number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData[0].addresses[0].flatNumber).is.a('Number');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server.protocol}}://{{server.host}}:9025/contact-service/v1/users/{{userId}}/contacts",
							"protocol": "{{server.protocol}}",
							"host": [
								"{{server.host}}"
							],
							"port": "9025",
							"path": [
								"contact-service",
								"v1",
								"users",
								"{{userId}}",
								"contacts"
							]
						}
					},
					"response": []
				},
				{
					"name": "DelContact",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "34987f54-194c-44a1-9dd0-3154a30a299b",
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"    pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"href\": \"http://some-other-host-for-dexter.com\",\r\n    \"description\": \"A description for dexter's link\",\r\n    \"label\": \"dexterLabel\",\r\n}"
						},
						"url": {
							"raw": "{{server.protocol}}://{{server.host}}:9025/contact-service/v1/users/{{userId}}/contacts/{{bookmarkId}}",
							"protocol": "{{server.protocol}}",
							"host": [
								"{{server.host}}"
							],
							"port": "9025",
							"path": [
								"contact-service",
								"v1",
								"users",
								"{{userId}}",
								"contacts",
								"{{bookmarkId}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "78e76719-999f-4668-ae30-f60f712f8935",
						"type": "text/javascript",
						"exec": [
							"pm.environment.set(\"userId\",\"dexter\");",
							"",
							"pm.sendRequest({",
							"    url: \"https://localhost:9999/sso/oauth/token?password=spring&username=jlong&grant_type=password&scope=openid&client_secret=acmesecret&client_id=acme\",",
							"    method: \"POST\",",
							"    header: {",
							"        'Authorization': \"Basic YWNtZTphY21lc2VjcmV0\"",
							"    },",
							"    request: {",
							"        \"href\": \"http://some-other-host-for-dexter.com\",",
							"        \"description\": \"A description for dexter's link\",",
							"        \"label\": \"dexterLabel\"",
							"    }",
							"}, function (err, res){",
							"    pm.environment.set('access_token',res.json().access_token)",
							"});",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fbf8bc96-ea32-4711-b4c1-aa2f3a9507cd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Passport Service",
			"item": [
				{
					"name": "GetPassports",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4707a9ad-6356-49b5-b3e3-688a134c0079",
								"exec": [
									"if (pm.response.code==200){",
									"    var jsonData = pm.response.json();",
									"    postman.setEnvironmentVariable('bookmarkId',jsonData.id);",
									"    postman.setEnvironmentVariable('userId','dexter');",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"href is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookmarks[0].href).is.a('string');",
									"});",
									"",
									"pm.test(\"label is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookmarks[0].label).is.a('string');",
									"});",
									"",
									"pm.test(\"id is a Number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookmarks[0].id).is.a('Number');",
									"});",
									"",
									"pm.test(\"userId is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookmarks[0].userId).is.a('string');",
									"});",
									"",
									"pm.test(\"firstName is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.contacts[0].firstName).is.a('string');",
									"});",
									"",
									"pm.test(\"lastName is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.contacts[0].lastName).is.a('string');",
									"});",
									"",
									"pm.test(\"email matches '.+@.+\\..+'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.contacts[0].email).to.match(/^.+@.+\\..+$/);",
									"});",
									"",
									"pm.test(\"relationship is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.contacts[0].relationship).is.a('string');",
									"});",
									"",
									"pm.test(\"id is a Number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.contacts[0].id).is.a('Number');",
									"});",
									"",
									"pm.test(\"userId is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.contacts[0].userId).is.a('string');",
									"});",
									"",
									"",
									"if (pm.response.code==200){",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.sendRequest({",
									"        url: \"https://localhost:9999/sso/oauth/token?password=spring&username=jlong&grant_type=password&scope=openid&client_secret=acmesecret&client_id=acme\",",
									"        method: \"POST\",",
									"        header: {",
									"            'Authorization': \"Basic YWNtZTphY21lc2VjcmV0\"",
									"        },",
									"        request: {",
									"            \"href\": \"http://some-other-host-for-dexter.com\",",
									"            \"description\": \"A description for dexter's link\",",
									"            \"label\": \"dexterLabel\"",
									"        }",
									"    }, function (err, res){",
									"        jsonData.bookmarks.forEach(function (value){",
									"            pm.sendRequest({",
									"                url: \"https://localhost:9025/bookmark-service/v1/users/\"+pm.environment.get('userId')+\"/bookmarks/\"+value.id,",
									"                method: \"DELETE\",",
									"                header: {",
									"                    'Authorization': \"Bearer \"+res.json().access_token,",
									"                    'Content-Type': 'application/json'",
									"                },",
									"                request: {",
									"                    \"href\": \"http://some-other-host-for-dexter.com\",",
									"                    \"description\": \"A description for dexter's link\",",
									"                    \"label\": \"dexterLabel\"",
									"                }",
									"            });",
									"        });",
									"        jsonData.contacts.forEach(function (value){",
									"            pm.sendRequest({",
									"                url: \"https://localhost:9025/contact-service/v1/users/\"+pm.environment.get('userId')+\"/contacts/\"+value.id,",
									"                method: \"DELETE\",",
									"                header: {",
									"                    'Authorization': \"Bearer \"+res.json().access_token,",
									"                    'Content-Type': 'application/json',",
									"                },",
									"                request: {",
									"                    \"href\": \"http://some-other-host-for-dexter.com\",",
									"                    \"description\": \"A description for dexter's link\"",
									"                }",
									"            });",
									"        });",
									"    });",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ddfd3bd4-9cb9-46f2-8b45-f00c12db6785",
								"exec": [
									"pm.environment.set(\"userId\",\"dexter\");",
									"",
									"pm.sendRequest({",
									"    url: \"https://localhost:9999/sso/oauth/token?password=spring&username=jlong&grant_type=password&scope=openid&client_secret=acmesecret&client_id=acme\",",
									"    method: \"POST\",",
									"    header: {",
									"        'Authorization': \"Basic YWNtZTphY21lc2VjcmV0\"",
									"    },",
									"    request: {",
									"        \"href\": \"http://some-other-host-for-dexter.com\",",
									"        \"description\": \"A description for dexter's link\",",
									"        \"label\": \"dexterLabel\"",
									"    }",
									"}, function (err, res){",
									"    pm.sendRequest({",
									"        url: \"https://localhost:9025/bookmark-service/v1/users/\"+pm.environment.get('userId')+\"/bookmarks\",",
									"        method: \"POST\",",
									"        header: {",
									"            'Authorization': \"Bearer \"+res.json().access_token,",
									"            'Content-Type': 'application/json'",
									"        },",
									"        body: {",
									"            mode: 'jow',",
									"            raw: JSON.stringify({",
									"                        \"href\": \"http://some-other-host-for-dexter.com\",",
									"                        \"description\": \"A description for dexter's link\",",
									"                        \"label\": \"dexterLabel\",",
									"                        \"id\": 34,",
									"                        \"userId\": \"dexter\"",
									"                    })",
									"        },",
									"        request: {",
									"            \"href\": \"http://some-other-host-for-dexter.com\",",
									"            \"description\": \"A description for dexter's link\",",
									"            \"label\": \"dexterLabel\"",
									"        }",
									"    });",
									"    pm.sendRequest({",
									"        url: \"https://localhost:9025/contact-service/v1/users/\"+pm.environment.get('userId')+\"/contacts\",",
									"        method: \"POST\",",
									"        header: {",
									"            'Authorization': \"Bearer \"+res.json().access_token,",
									"            'Content-Type': 'application/json'",
									"        },",
									"        body: {",
									"            mode: 'jow',",
									"            raw: JSON.stringify({",
									"                        \"firstName\": \"Stéphane\",",
									"                        \"lastName\": \"Maldini\",",
									"                        \"email\": \"stéphane@email.com\",",
									"                        \"relationship\": \"coleague\"",
									"                    })",
									"        },",
									"        request: {",
									"            \"href\": \"http://some-other-host-for-dexter.com\",",
									"            \"description\": \"A description for dexter's link\",",
									"            \"label\": \"dexterLabel\"",
									"        }",
									"    });",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server.protocol}}://{{server.host}}:9025/passport-service/v1/users/{{userId}}/passport",
							"protocol": "{{server.protocol}}",
							"host": [
								"{{server.host}}"
							],
							"port": "9025",
							"path": [
								"passport-service",
								"v1",
								"users",
								"{{userId}}",
								"passport"
							]
						}
					},
					"response": []
				},
				{
					"name": "AsynchronousGetPassports",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ed20a62b-eda3-4ad6-b2cd-f5cd70633d1d",
								"exec": [
									"if (pm.response.code==200){",
									"    var jsonData = pm.response.json();",
									"    postman.setEnvironmentVariable('bookmarkId',jsonData.id);",
									"    postman.setEnvironmentVariable('userId','dexter');",
									"}",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"href is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookmarks[0].href).is.a('string');",
									"});",
									"",
									"pm.test(\"label is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookmarks[0].label).is.a('string');",
									"});",
									"",
									"pm.test(\"id is a Number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookmarks[0].id).is.a('Number');",
									"});",
									"",
									"pm.test(\"userId is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.bookmarks[0].userId).is.a('string');",
									"});",
									"",
									"pm.test(\"firstName is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.contacts[0].firstName).is.a('string');",
									"});",
									"",
									"pm.test(\"lastName is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.contacts[0].lastName).is.a('string');",
									"});",
									"",
									"pm.test(\"email matches '.+@.+\\..+'\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.contacts[0].email).to.match(/^.+@.+\\..+$/);",
									"});",
									"",
									"pm.test(\"relationship is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.contacts[0].relationship).is.a('string');",
									"});",
									"",
									"pm.test(\"id is a Number\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.contacts[0].id).is.a('Number');",
									"});",
									"",
									"pm.test(\"userId is a string\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.contacts[0].userId).is.a('string');",
									"});",
									"",
									"",
									"if (pm.response.code==200){",
									"    var jsonData = pm.response.json();",
									"",
									"    pm.sendRequest({",
									"        url: \"https://localhost:9999/sso/oauth/token?password=spring&username=jlong&grant_type=password&scope=openid&client_secret=acmesecret&client_id=acme\",",
									"        method: \"POST\",",
									"        header: {",
									"            'Authorization': \"Basic YWNtZTphY21lc2VjcmV0\"",
									"        },",
									"        request: {",
									"            \"href\": \"http://some-other-host-for-dexter.com\",",
									"            \"description\": \"A description for dexter's link\",",
									"            \"label\": \"dexterLabel\"",
									"        }",
									"    }, function (err, res){",
									"        jsonData.bookmarks.forEach(function (value){",
									"            pm.sendRequest({",
									"                url: \"https://localhost:9025/bookmark-service/v1/users/\"+pm.environment.get('userId')+\"/bookmarks/\"+value.id,",
									"                method: \"DELETE\",",
									"                header: {",
									"                    'Authorization': \"Bearer \"+res.json().access_token,",
									"                    'Content-Type': 'application/json'",
									"                },",
									"                request: {",
									"                    \"href\": \"http://some-other-host-for-dexter.com\",",
									"                    \"description\": \"A description for dexter's link\",",
									"                    \"label\": \"dexterLabel\"",
									"                }",
									"            });",
									"        });",
									"        jsonData.contacts.forEach(function (value){",
									"            pm.sendRequest({",
									"                url: \"https://localhost:9025/contact-service/v1/users/\"+pm.environment.get('userId')+\"/contacts/\"+value.id,",
									"                method: \"DELETE\",",
									"                header: {",
									"                    'Authorization': \"Bearer \"+res.json().access_token,",
									"                    'Content-Type': 'application/json',",
									"                },",
									"                request: {",
									"                    \"href\": \"http://some-other-host-for-dexter.com\",",
									"                    \"description\": \"A description for dexter's link\"",
									"                }",
									"            });",
									"        });",
									"    });",
									"}",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f1d284b1-e511-42d4-a29e-d3e01ccc8d5e",
								"exec": [
									"pm.environment.set(\"userId\",\"dexter\");",
									"",
									"pm.sendRequest({",
									"    url: \"https://localhost:9999/sso/oauth/token?password=spring&username=jlong&grant_type=password&scope=openid&client_secret=acmesecret&client_id=acme\",",
									"    method: \"POST\",",
									"    header: {",
									"        'Authorization': \"Basic YWNtZTphY21lc2VjcmV0\"",
									"    },",
									"    request: {",
									"        \"href\": \"http://some-other-host-for-dexter.com\",",
									"        \"description\": \"A description for dexter's link\",",
									"        \"label\": \"dexterLabel\"",
									"    }",
									"}, function (err, res){",
									"    pm.sendRequest({",
									"        url: \"https://localhost:9025/bookmark-service/v1/users/\"+pm.environment.get('userId')+\"/bookmarks\",",
									"        method: \"POST\",",
									"        header: {",
									"            'Authorization': \"Bearer \"+res.json().access_token,",
									"            'Content-Type': 'application/json'",
									"        },",
									"        body: {",
									"            mode: 'jow',",
									"            raw: JSON.stringify({",
									"                        \"href\": \"http://some-other-host-for-dexter.com\",",
									"                        \"description\": \"A description for dexter's link\",",
									"                        \"label\": \"dexterLabel\",",
									"                        \"id\": 34,",
									"                        \"userId\": \"dexter\"",
									"                    })",
									"        },",
									"        request: {",
									"            \"href\": \"http://some-other-host-for-dexter.com\",",
									"            \"description\": \"A description for dexter's link\",",
									"            \"label\": \"dexterLabel\"",
									"        }",
									"    });",
									"    pm.sendRequest({",
									"        url: \"https://localhost:9025/contact-service/v1/users/\"+pm.environment.get('userId')+\"/contacts\",",
									"        method: \"POST\",",
									"        header: {",
									"            'Authorization': \"Bearer \"+res.json().access_token,",
									"            'Content-Type': 'application/json'",
									"        },",
									"        body: {",
									"            mode: 'jow',",
									"            raw: JSON.stringify({",
									"                        \"firstName\": \"Stéphane\",",
									"                        \"lastName\": \"Maldini\",",
									"                        \"email\": \"stéphane@email.com\",",
									"                        \"relationship\": \"coleague\"",
									"                    })",
									"        },",
									"        request: {",
									"            \"href\": \"http://some-other-host-for-dexter.com\",",
									"            \"description\": \"A description for dexter's link\",",
									"            \"label\": \"dexterLabel\"",
									"        }",
									"    });",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{server.protocol}}://{{server.host}}:9025/passport-service/v1/async/users/{{userId}}/passport",
							"protocol": "{{server.protocol}}",
							"host": [
								"{{server.host}}"
							],
							"port": "9025",
							"path": [
								"passport-service",
								"v1",
								"async",
								"users",
								"{{userId}}",
								"passport"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "491e5589-5b77-4d93-89c9-5137c077d153",
						"type": "text/javascript",
						"exec": [
							"pm.environment.set(\"userId\",\"dexter\");",
							"",
							"pm.sendRequest({",
							"    url: \"https://localhost:9999/sso/oauth/token?password=spring&username=jlong&grant_type=password&scope=openid&client_secret=acmesecret&client_id=acme\",",
							"    method: \"POST\",",
							"    header: {",
							"        'Authorization': \"Basic YWNtZTphY21lc2VjcmV0\"",
							"    },",
							"    request: {",
							"        \"href\": \"http://some-other-host-for-dexter.com\",",
							"        \"description\": \"A description for dexter's link\",",
							"        \"label\": \"dexterLabel\"",
							"    }",
							"}, function (err, res){",
							"    pm.sendRequest({",
							"        url: \"https://localhost:9025/bookmark-service/v1/users/\"+pm.environment.get('userId')+\"/bookmarks\",",
							"        method: \"POST\",",
							"        header: {",
							"            'Authorization': \"Bearer \"+res.json().access_token,",
							"            'Content-Type': 'application/json'",
							"        },",
							"        body: {",
							"            mode: 'jow',",
							"            raw: JSON.stringify({",
							"                        \"href\": \"http://some-other-host-for-dexter.com\",",
							"                        \"description\": \"A description for dexter's link\",",
							"                        \"label\": \"dexterLabel\",",
							"                        \"id\": 34,",
							"                        \"userId\": \"dexter\"",
							"                    })",
							"        },",
							"        request: {",
							"            \"href\": \"http://some-other-host-for-dexter.com\",",
							"            \"description\": \"A description for dexter's link\",",
							"            \"label\": \"dexterLabel\"",
							"        }",
							"    });",
							"    pm.sendRequest({",
							"        url: \"https://localhost:9025/contact-service/v1/users/\"+pm.environment.get('userId')+\"/contacts\",",
							"        method: \"POST\",",
							"        header: {",
							"            'Authorization': \"Bearer \"+res.json().access_token,",
							"            'Content-Type': 'application/json'",
							"        },",
							"        body: {",
							"            mode: 'jow',",
							"            raw: JSON.stringify({",
							"                        \"firstName\": \"Stéphane\",",
							"                        \"lastName\": \"Maldini\",",
							"                        \"email\": \"stéphane@email.com\",",
							"                        \"relationship\": \"coleague\"",
							"                    })",
							"        },",
							"        request: {",
							"            \"href\": \"http://some-other-host-for-dexter.com\",",
							"            \"description\": \"A description for dexter's link\",",
							"            \"label\": \"dexterLabel\"",
							"        }",
							"    });",
							"});",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "0c2d05d3-7d60-493c-9c5c-349a98f98c6a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "1f9a0d5d-ed7d-4dca-b973-a78423544e2b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "2a678f8f-1d61-4fd4-b859-efb3b49acb90",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}