{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Contact service",
    "description" : "Contact REST service",
    "contact" : {
      "name" : "John Doe",
      "url" : "https://localhost:9025/contact-service",
      "email" : "john.doe@domain.com"
    },
    "license" : {
      "name" : "Apache License, Version 2.0",
      "url" : "https://localhost:9025/contact-service"
    },
    "version" : "v1"
  },
  "servers" : [ {
    "url" : "https://localhost:9025/contact-service",
    "description" : "Generated server url"
  } ],
  "security" : [ {
    "oauth2_authorisation_code" : [ ],
    "oauth2_password" : [ ]
  } ],
  "paths" : {
    "/v1/users/{userId}/contacts/{contactId}" : {
      "get" : {
        "tags" : [ "Contact" ],
        "summary" : "Get contact",
        "description" : "Get a contact",
        "operationId" : "getContact",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "200" : {
            "description" : "Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactResponse"
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Contact" ],
        "summary" : "Update contact",
        "description" : "Update a contact and return it",
        "operationId" : "updateContact",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Contact" ],
        "summary" : "Delete contact",
        "description" : "Delete a contact",
        "operationId" : "deleteContact",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "contactId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int64"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad request"
          },
          "200" : {
            "description" : "No content"
          },
          "404" : {
            "description" : "Not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      }
    },
    "/v1/users/{userId}/contacts" : {
      "get" : {
        "tags" : [ "Contact" ],
        "summary" : "Get contacts",
        "description" : "Get a list of contacts",
        "operationId" : "getContacts",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "404" : {
            "description" : "Not found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactResponse"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactResponse"
                  }
                }
              }
            }
          },
          "200" : {
            "description" : "Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ContactResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Contact" ],
        "summary" : "Add contact",
        "description" : "Create a new contact and return it",
        "operationId" : "createContact",
        "parameters" : [ {
          "name" : "userId",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContactRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Ok",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactResponse"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal server error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ContactResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "AddressRequest" : {
        "required" : [ "country", "street", "town" ],
        "type" : "object",
        "properties" : {
          "country" : {
            "type" : "string",
            "example" : "USA"
          },
          "town" : {
            "type" : "string",
            "example" : "New York"
          },
          "street" : {
            "type" : "string",
            "example" : "17th Street"
          },
          "number" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 84
          },
          "entrance" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 3
          },
          "flatNumber" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 123
          }
        },
        "description" : "Address"
      },
      "ContactRequest" : {
        "required" : [ "firstName", "lastName", "relationship" ],
        "type" : "object",
        "properties" : {
          "firstName" : {
            "title" : "First name",
            "type" : "string",
            "example" : "Stéphane"
          },
          "lastName" : {
            "title" : "Last name",
            "type" : "string",
            "example" : "Maldini"
          },
          "email" : {
            "title" : "Email",
            "pattern" : ".+@.+\\..+",
            "type" : "string",
            "example" : "stéphane@email.com"
          },
          "relationship" : {
            "title" : "Relationship",
            "type" : "string",
            "example" : "friend"
          },
          "phoneNumbers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PhoneNumberDetailsRequest"
            }
          },
          "addresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddressRequest"
            }
          }
        },
        "description" : "User contacts"
      },
      "PhoneNumberDetailsRequest" : {
        "title" : "PhoneNumberDetailsRequest",
        "required" : [ "number" ],
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "string",
            "example" : "+10723123456"
          },
          "description" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string",
            "example" : "phone number description Stéphane Maldini"
          }
        },
        "description" : "Phone number details"
      },
      "AddressResponse" : {
        "required" : [ "country", "id", "street", "town" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 31
          },
          "country" : {
            "type" : "string",
            "example" : "USA"
          },
          "town" : {
            "type" : "string",
            "example" : "New York"
          },
          "street" : {
            "type" : "string",
            "example" : "17th Street"
          },
          "number" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 84
          },
          "entrance" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 3
          },
          "flatNumber" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 123
          }
        },
        "description" : "Address"
      },
      "ContactResponse" : {
        "required" : [ "firstName", "id", "lastName", "relationship", "userId" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "title" : "Contact id",
            "type" : "integer",
            "format" : "int64",
            "example" : 3
          },
          "userId" : {
            "title" : "Used id",
            "type" : "string",
            "example" : "jlong"
          },
          "firstName" : {
            "title" : "First name",
            "type" : "string",
            "example" : "Stéphane"
          },
          "lastName" : {
            "title" : "Last name",
            "type" : "string",
            "example" : "Maldini"
          },
          "email" : {
            "title" : "Email",
            "pattern" : ".+@.+\\..+",
            "type" : "string",
            "example" : "stéphane@email.com"
          },
          "relationship" : {
            "title" : "Relationship",
            "type" : "string",
            "example" : "friend"
          },
          "phoneNumbers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/PhoneNumberDetailsResponse"
            }
          },
          "addresses" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AddressResponse"
            }
          }
        },
        "description" : "User contacts"
      },
      "PhoneNumberDetailsResponse" : {
        "title" : "PhoneNumberDetailsResponse",
        "required" : [ "id", "number" ],
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64",
            "example" : 64
          },
          "number" : {
            "type" : "string",
            "example" : "+10723123456"
          },
          "description" : {
            "maxLength" : 2147483647,
            "minLength" : 1,
            "type" : "string",
            "example" : "phone number description Stéphane Maldini"
          }
        },
        "description" : "Phone number details"
      }
    },
    "securitySchemes" : {
      "oauth2_authorisation_code" : {
        "type" : "oauth2",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://localhost:9999/sso/oauth/authorize",
            "tokenUrl" : "https://localhost:9999/sso/oauth/token",
            "scopes" : {
              "read" : "for read operations",
              "write" : "for write operations"
            }
          }
        }
      },
      "oauth2_password" : {
        "type" : "oauth2",
        "flows" : {
          "password" : {
            "authorizationUrl" : "https://localhost:9999/sso/oauth/authorize",
            "tokenUrl" : "https://localhost:9999/sso/oauth/token",
            "scopes" : {
              "read" : "for read operations",
              "write" : "for write operations"
            }
          }
        }
      }
    }
  }
}