apiVersion: apps/v1
kind: Deployment
metadata:
  name: sso-auth-service
  labels:
    app: sso-auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sso-auth-service
  strategy:
    rollingUpdate:
      maxSurge: 0%
  template:
    metadata:
      labels:
        app: sso-auth-service
    spec:
      volumes:
        - name: app-logs-volume
          persistentVolumeClaim:
            claimName: app-logs-pvc
      containers:
        - name: sso-auth-service
          image: radulecu/sso-auth-service
          command: [ "java" ]
          args:
            - "-XX:MaxRAMPercentage=80"
            - "-XX:+ExitOnOutOfMemoryError"
            - "-jar"
            - "/opt/app/sso-auth-service.jar"
          ports:
            - containerPort: 80
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: cloud
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - mountPath: "/opt/log"
              name: app-logs-volume
          resources:
            requests:
              memory: "512Mi"
            limits:
              memory: "1024Mi"
          startupProbe:
            httpGet:
              path: /sso/actuator/health/readiness
              port: 80
              httpHeaders:
                - name: Accept
                  value: application/json
            failureThreshold: 20
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /sso/actuator/health
              port: 80
              httpHeaders:
                - name: Accept
                  value: application/json
            failureThreshold: 5
            periodSeconds: 3
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/region
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: sso-auth-service
---
apiVersion: v1
kind: Service
metadata:
  name: sso-auth-service
  labels:
    run: sso-auth-service
spec:
  type: NodePort
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
      nodePort: 31999
  selector:
    app: sso-auth-service