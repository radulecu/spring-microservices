apiVersion: apps/v1
kind: Deployment
metadata:
  name: eureka-service
  labels:
    app: eureka-service
spec:
  replicas: 4
  selector:
    matchLabels:
      app: eureka-service
  strategy:
    rollingUpdate:
      maxSurge: 0%
  template:
    metadata:
      labels:
        app: eureka-service
    spec:
      containers:
        - name: eureka-service
          image: radulecu/eureka-service
          command: [ "java" ]
          args:
            - "-XX:MaxRAMPercentage=80"
            - "-XX:+ExitOnOutOfMemoryError"
            - "-jar"
            - "/opt/app/eureka-service.jar"
          ports:
            - containerPort: 80
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: cloud
            - name: server.hostname
              value: eureka-service.${server.domain}
          resources:
            requests:
              memory: "512Mi"
            limits:
              memory: "1024Mi"
          startupProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 80
              httpHeaders:
                - name: Accept
                  value: application/json
            failureThreshold: 20
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 80
              httpHeaders:
                - name: Accept
                  value: application/json
            failureThreshold: 5
            periodSeconds: 3
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/region
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: eureka-service
---
apiVersion: v1
kind: Service
metadata:
  name: eureka-service
  labels:
    run: eureka-service
spec:
  type: NodePort
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
      nodePort: 30761
  selector:
    app: eureka-service