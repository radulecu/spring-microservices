# Security default values
security.server.protocol=${server.protocol:http}
security.server.hostname=${server.hostname}
security.server.port=9999
security.server.user=none
security.server.password=none

zuul.routes.user.path=/user/**
zuul.routes.user.url=${security.server.url}/user

# Security
security.server.url=${security.server.protocol}://${security.server.hostname}:${security.server.port}/sso
security.server.jwtSigningKey=A&'/}Z57M(2hNg=;LE?~]YtRMS5(yZ<vcZTA3N-($>2j:ZeX-BGftaVk`)jKP~q?,jk)EMbgt*kW'(

spring.security.oauth2.client.registration.local.clientId=${security.server.user}
spring.security.oauth2.client.registration.local.clientSecret=${security.server.password}
spring.security.oauth2.client.registration.local.clientName=Auth Server
spring.security.oauth2.client.registration.local.scope=read,write
spring.security.oauth2.client.registration.local.provider=local
spring.security.oauth2.client.registration.local.redirect-uri=${server.protocol:http}://${server.hostname}:${server.port}/login/oauth2/code/local
spring.security.oauth2.client.registration.local.authorizationGrantType=authorization_code
spring.security.oauth2.client.registration.local.client-authentication-method=basic
spring.security.oauth2.client.provider.local.tokenUri=${security.server.url}/oauth/token
spring.security.oauth2.client.provider.local.authorizationUri=${security.server.url}/oauth/authorize
spring.security.oauth2.client.provider.local.userInfoUri=${security.server.url}/user
spring.security.oauth2.client.provider.local.userNameAttribute=name


debug=true
logging.level.org.springframework=debug
